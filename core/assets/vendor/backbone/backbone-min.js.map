{"version":3,"file":"backbone-min.js","sources":["backbone.js"],"sourcesContent":["//     Backbone.js 1.4.0\n\n//     (c) 2010-2019 Jeremy Ashkenas and DocumentCloud\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\n(function(factory) {\n\n  // Establish the root object, `window` (`self`) in the browser, or `global` on the server.\n  // We use `self` instead of `window` for `WebWorker` support.\n  var root = typeof self == 'object' && self.self === self && self ||\n            typeof global == 'object' && global.global === global && global;\n\n  // Set up Backbone appropriately for the environment. Start with AMD.\n  if (typeof define === 'function' && define.amd) {\n    define(['underscore', 'jquery', 'exports'], function(_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    });\n\n  // Next for Node.js or CommonJS. jQuery may not be needed as a module.\n  } else if (typeof exports !== 'undefined') {\n    var _ = require('underscore'), $;\n    try { $ = require('jquery'); } catch (e) {}\n    factory(root, exports, _, $);\n\n  // Finally, as a browser global.\n  } else {\n    root.Backbone = factory(root, {}, root._, root.jQuery || root.Zepto || root.ender || root.$);\n  }\n\n})(function(root, Backbone, _, $) {\n\n  // Initial Setup\n  // -------------\n\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone;\n\n  // Create a local reference to a common array method we'll want to use later.\n  var slice = Array.prototype.slice;\n\n  // Current version of the library. Keep in sync with `package.json`.\n  Backbone.VERSION = '1.4.0';\n\n  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n  // the `$` variable.\n  Backbone.$ = $;\n\n  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n  Backbone.noConflict = function() {\n    root.Backbone = previousBackbone;\n    return this;\n  };\n\n  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n  Backbone.emulateHTTP = false;\n\n  // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... this will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n  Backbone.emulateJSON = false;\n\n  // Backbone.Events\n  // ---------------\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // a custom event channel. You may bind a callback to an event with `on` or\n  // remove with `off`; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  var Events = Backbone.Events = {};\n\n  // Regular expression used to split event strings.\n  var eventSplitter = /\\s+/;\n\n  // A private global variable to share between listeners and listenees.\n  var _listening;\n\n  // Iterates over the standard `event, callback` (as well as the fancy multiple\n  // space-separated events `\"change blur\", callback` and jQuery-style event\n  // maps `{event: callback}`).\n  var eventsApi = function(iteratee, events, name, callback, opts) {\n    var i = 0, names;\n    if (name && typeof name === 'object') {\n      // Handle event maps.\n      if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;\n      for (names = _.keys(name); i < names.length ; i++) {\n        events = eventsApi(iteratee, events, names[i], name[names[i]], opts);\n      }\n    } else if (name && eventSplitter.test(name)) {\n      // Handle space-separated event names by delegating them individually.\n      for (names = name.split(eventSplitter); i < names.length; i++) {\n        events = iteratee(events, names[i], callback, opts);\n      }\n    } else {\n      // Finally, standard events.\n      events = iteratee(events, name, callback, opts);\n    }\n    return events;\n  };\n\n  // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n  Events.on = function(name, callback, context) {\n    this._events = eventsApi(onApi, this._events || {}, name, callback, {\n      context: context,\n      ctx: this,\n      listening: _listening\n    });\n\n    if (_listening) {\n      var listeners = this._listeners || (this._listeners = {});\n      listeners[_listening.id] = _listening;\n      // Allow the listening to use a counter, instead of tracking\n      // callbacks for library interop\n      _listening.interop = false;\n    }\n\n    return this;\n  };\n\n  // Inversion-of-control versions of `on`. Tell *this* object to listen to\n  // an event in another object... keeping track of what it's listening to\n  // for easier unbinding later.\n  Events.listenTo = function(obj, name, callback) {\n    if (!obj) return this;\n    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n    var listeningTo = this._listeningTo || (this._listeningTo = {});\n    var listening = _listening = listeningTo[id];\n\n    // This object is not listening to any other events on `obj` yet.\n    // Setup the necessary references to track the listening callbacks.\n    if (!listening) {\n      this._listenId || (this._listenId = _.uniqueId('l'));\n      listening = _listening = listeningTo[id] = new Listening(this, obj);\n    }\n\n    // Bind callbacks on obj.\n    var error = tryCatchOn(obj, name, callback, this);\n    _listening = void 0;\n\n    if (error) throw error;\n    // If the target obj is not Backbone.Events, track events manually.\n    if (listening.interop) listening.on(name, callback);\n\n    return this;\n  };\n\n  // The reducing API that adds a callback to the `events` object.\n  var onApi = function(events, name, callback, options) {\n    if (callback) {\n      var handlers = events[name] || (events[name] = []);\n      var context = options.context, ctx = options.ctx, listening = options.listening;\n      if (listening) listening.count++;\n\n      handlers.push({callback: callback, context: context, ctx: context || ctx, listening: listening});\n    }\n    return events;\n  };\n\n  // An try-catch guarded #on function, to prevent poisoning the global\n  // `_listening` variable.\n  var tryCatchOn = function(obj, name, callback, context) {\n    try {\n      obj.on(name, callback, context);\n    } catch (e) {\n      return e;\n    }\n  };\n\n  // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n  Events.off = function(name, callback, context) {\n    if (!this._events) return this;\n    this._events = eventsApi(offApi, this._events, name, callback, {\n      context: context,\n      listeners: this._listeners\n    });\n\n    return this;\n  };\n\n  // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n  Events.stopListening = function(obj, name, callback) {\n    var listeningTo = this._listeningTo;\n    if (!listeningTo) return this;\n\n    var ids = obj ? [obj._listenId] : _.keys(listeningTo);\n    for (var i = 0; i < ids.length; i++) {\n      var listening = listeningTo[ids[i]];\n\n      // If listening doesn't exist, this object is not currently\n      // listening to obj. Break out early.\n      if (!listening) break;\n\n      listening.obj.off(name, callback, this);\n      if (listening.interop) listening.off(name, callback);\n    }\n    if (_.isEmpty(listeningTo)) this._listeningTo = void 0;\n\n    return this;\n  };\n\n  // The reducing API that removes a callback from the `events` object.\n  var offApi = function(events, name, callback, options) {\n    if (!events) return;\n\n    var context = options.context, listeners = options.listeners;\n    var i = 0, names;\n\n    // Delete all event listeners and \"drop\" events.\n    if (!name && !context && !callback) {\n      for (names = _.keys(listeners); i < names.length; i++) {\n        listeners[names[i]].cleanup();\n      }\n      return;\n    }\n\n    names = name ? [name] : _.keys(events);\n    for (; i < names.length; i++) {\n      name = names[i];\n      var handlers = events[name];\n\n      // Bail out if there are no events stored.\n      if (!handlers) break;\n\n      // Find any remaining events.\n      var remaining = [];\n      for (var j = 0; j < handlers.length; j++) {\n        var handler = handlers[j];\n        if (\n          callback && callback !== handler.callback &&\n            callback !== handler.callback._callback ||\n              context && context !== handler.context\n        ) {\n          remaining.push(handler);\n        } else {\n          var listening = handler.listening;\n          if (listening) listening.off(name, callback);\n        }\n      }\n\n      // Replace events if there are any remaining.  Otherwise, clean up.\n      if (remaining.length) {\n        events[name] = remaining;\n      } else {\n        delete events[name];\n      }\n    }\n\n    return events;\n  };\n\n  // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, its listener will be removed. If multiple events\n  // are passed in using the space-separated syntax, the handler will fire\n  // once for each event, not once for a combination of all events.\n  Events.once = function(name, callback, context) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, this.off.bind(this));\n    if (typeof name === 'string' && context == null) callback = void 0;\n    return this.on(events, callback, context);\n  };\n\n  // Inversion-of-control versions of `once`.\n  Events.listenToOnce = function(obj, name, callback) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, this.stopListening.bind(this, obj));\n    return this.listenTo(obj, events);\n  };\n\n  // Reduces the event callbacks into a map of `{event: onceWrapper}`.\n  // `offer` unbinds the `onceWrapper` after it has been called.\n  var onceMap = function(map, name, callback, offer) {\n    if (callback) {\n      var once = map[name] = _.once(function() {\n        offer(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n    }\n    return map;\n  };\n\n  // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n  Events.trigger = function(name) {\n    if (!this._events) return this;\n\n    var length = Math.max(0, arguments.length - 1);\n    var args = Array(length);\n    for (var i = 0; i < length; i++) args[i] = arguments[i + 1];\n\n    eventsApi(triggerApi, this._events, name, void 0, args);\n    return this;\n  };\n\n  // Handles triggering the appropriate event callbacks.\n  var triggerApi = function(objEvents, name, callback, args) {\n    if (objEvents) {\n      var events = objEvents[name];\n      var allEvents = objEvents.all;\n      if (events && allEvents) allEvents = allEvents.slice();\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, [name].concat(args));\n    }\n    return objEvents;\n  };\n\n  // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n  var triggerEvents = function(events, args) {\n    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;\n    }\n  };\n\n  // A listening class that tracks and cleans up memory bindings\n  // when all callbacks have been offed.\n  var Listening = function(listener, obj) {\n    this.id = listener._listenId;\n    this.listener = listener;\n    this.obj = obj;\n    this.interop = true;\n    this.count = 0;\n    this._events = void 0;\n  };\n\n  Listening.prototype.on = Events.on;\n\n  // Offs a callback (or several).\n  // Uses an optimized counter if the listenee uses Backbone.Events.\n  // Otherwise, falls back to manual tracking to support events\n  // library interop.\n  Listening.prototype.off = function(name, callback) {\n    var cleanup;\n    if (this.interop) {\n      this._events = eventsApi(offApi, this._events, name, callback, {\n        context: void 0,\n        listeners: void 0\n      });\n      cleanup = !this._events;\n    } else {\n      this.count--;\n      cleanup = this.count === 0;\n    }\n    if (cleanup) this.cleanup();\n  };\n\n  // Cleans up memory bindings between the listener and the listenee.\n  Listening.prototype.cleanup = function() {\n    delete this.listener._listeningTo[this.obj._listenId];\n    if (!this.interop) delete this.obj._listeners[this.id];\n  };\n\n  // Aliases for backwards compatibility.\n  Events.bind   = Events.on;\n  Events.unbind = Events.off;\n\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\n  // want global \"pubsub\" in a convenient place.\n  _.extend(Backbone, Events);\n\n  // Backbone.Model\n  // --------------\n\n  // Backbone **Models** are the basic data object in the framework --\n  // frequently representing a row in a table in a database on your server.\n  // A discrete chunk of data and a bunch of useful, related methods for\n  // performing computations and transformations on that data.\n\n  // Create a new model with the specified attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n  var Model = Backbone.Model = function(attributes, options) {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.preinitialize.apply(this, arguments);\n    this.cid = _.uniqueId(this.cidPrefix);\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    var defaults = _.result(this, 'defaults');\n    attrs = _.defaults(_.extend({}, defaults, attrs), defaults);\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n  };\n\n  // Attach all inheritable methods to the Model prototype.\n  _.extend(Model.prototype, Events, {\n\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n\n    // The value returned during the last failed validation.\n    validationError: null,\n\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n\n    // The prefix is used to create the client id which is used to identify models locally.\n    // You may want to override this if you're experiencing name clashes with model ids.\n    cidPrefix: 'c',\n\n    // preinitialize is an empty function by default. You can override it with a function\n    // or object.  preinitialize will run before any instantiation logic is run in the Model.\n    preinitialize: function(){},\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Return a copy of the model's `attributes` object.\n    toJSON: function(options) {\n      return _.clone(this.attributes);\n    },\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Get the value of an attribute.\n    get: function(attr) {\n      return this.attributes[attr];\n    },\n\n    // Get the HTML-escaped value of an attribute.\n    escape: function(attr) {\n      return _.escape(this.get(attr));\n    },\n\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function(attr) {\n      return this.get(attr) != null;\n    },\n\n    // Special-cased proxy to underscore's `_.matches` method.\n    matches: function(attrs) {\n      return !!_.iteratee(attrs, this)(this.attributes);\n    },\n\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n    set: function(key, val, options) {\n      if (key == null) return this;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options || (options = {});\n\n      // Run validation.\n      if (!this._validate(attrs, options)) return false;\n\n      // Extract attributes and options.\n      var unset      = options.unset;\n      var silent     = options.silent;\n      var changes    = [];\n      var changing   = this._changing;\n      this._changing = true;\n\n      if (!changing) {\n        this._previousAttributes = _.clone(this.attributes);\n        this.changed = {};\n      }\n\n      var current = this.attributes;\n      var changed = this.changed;\n      var prev    = this._previousAttributes;\n\n      // For each `set` attribute, update or delete the current value.\n      for (var attr in attrs) {\n        val = attrs[attr];\n        if (!_.isEqual(current[attr], val)) changes.push(attr);\n        if (!_.isEqual(prev[attr], val)) {\n          changed[attr] = val;\n        } else {\n          delete changed[attr];\n        }\n        unset ? delete current[attr] : current[attr] = val;\n      }\n\n      // Update the `id`.\n      if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\n\n      // Trigger all relevant attribute changes.\n      if (!silent) {\n        if (changes.length) this._pending = options;\n        for (var i = 0; i < changes.length; i++) {\n          this.trigger('change:' + changes[i], this, current[changes[i]], options);\n        }\n      }\n\n      // You might be wondering why there's a `while` loop here. Changes can\n      // be recursively nested within `\"change\"` events.\n      if (changing) return this;\n      if (!silent) {\n        while (this._pending) {\n          options = this._pending;\n          this._pending = false;\n          this.trigger('change', this, options);\n        }\n      }\n      this._pending = false;\n      this._changing = false;\n      return this;\n    },\n\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n    unset: function(attr, options) {\n      return this.set(attr, void 0, _.extend({}, options, {unset: true}));\n    },\n\n    // Clear all attributes on the model, firing `\"change\"`.\n    clear: function(options) {\n      var attrs = {};\n      for (var key in this.attributes) attrs[key] = void 0;\n      return this.set(attrs, _.extend({}, options, {unset: true}));\n    },\n\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function(attr) {\n      if (attr == null) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function(diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var old = this._changing ? this._previousAttributes : this.attributes;\n      var changed = {};\n      var hasChanged;\n      for (var attr in diff) {\n        var val = diff[attr];\n        if (_.isEqual(old[attr], val)) continue;\n        changed[attr] = val;\n        hasChanged = true;\n      }\n      return hasChanged ? changed : false;\n    },\n\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function(attr) {\n      if (attr == null || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function() {\n      return _.clone(this._previousAttributes);\n    },\n\n    // Fetch the model from the server, merging the response with the model's\n    // local attributes. Any changed attributes will trigger a \"change\" event.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (!model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function(key, val, options) {\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (key == null || typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options = _.extend({validate: true, parse: true}, options);\n      var wait = options.wait;\n\n      // If we're not waiting and attributes exist, save acts as\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\n      // the model will be valid when the attributes, if any, are set.\n      if (attrs && !wait) {\n        if (!this.set(attrs, options)) return false;\n      } else if (!this._validate(attrs, options)) {\n        return false;\n      }\n\n      // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n      var model = this;\n      var success = options.success;\n      var attributes = this.attributes;\n      options.success = function(resp) {\n        // Ensure attributes are restored during synchronous saves.\n        model.attributes = attributes;\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);\n        if (serverAttrs && !model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\n      if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);\n\n      var method = this.isNew() ? 'create' : options.patch ? 'patch' : 'update';\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\n      var xhr = this.sync(method, this, options);\n\n      // Restore attributes.\n      this.attributes = attributes;\n\n      return xhr;\n    },\n\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function(options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n      var wait = options.wait;\n\n      var destroy = function() {\n        model.stopListening();\n        model.trigger('destroy', model, model.collection, options);\n      };\n\n      options.success = function(resp) {\n        if (wait) destroy();\n        if (success) success.call(options.context, model, resp, options);\n        if (!model.isNew()) model.trigger('sync', model, resp, options);\n      };\n\n      var xhr = false;\n      if (this.isNew()) {\n        _.defer(options.success);\n      } else {\n        wrapError(this, options);\n        xhr = this.sync('delete', this, options);\n      }\n      if (!wait) destroy();\n      return xhr;\n    },\n\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function() {\n      var base =\n        _.result(this, 'urlRoot') ||\n        _.result(this.collection, 'url') ||\n        urlError();\n      if (this.isNew()) return base;\n      var id = this.get(this.idAttribute);\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\n    },\n\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new model with identical attributes to this one.\n    clone: function() {\n      return new this.constructor(this.attributes);\n    },\n\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function() {\n      return !this.has(this.idAttribute);\n    },\n\n    // Check if the model is currently in a valid state.\n    isValid: function(options) {\n      return this._validate({}, _.extend({}, options, {validate: true}));\n    },\n\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n    _validate: function(attrs, options) {\n      if (!options.validate || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validationError = this.validate(attrs, options) || null;\n      if (!error) return true;\n      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));\n      return false;\n    }\n\n  });\n\n  // Backbone.Collection\n  // -------------------\n\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analogous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n  var Collection = Backbone.Collection = function(models, options) {\n    options || (options = {});\n    this.preinitialize.apply(this, arguments);\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n    this._reset();\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({silent: true}, options));\n  };\n\n  // Default options for `Collection#set`.\n  var setOptions = {add: true, remove: true, merge: true};\n  var addOptions = {add: true, remove: false};\n\n  // Splices `insert` into `array` at index `at`.\n  var splice = function(array, insert, at) {\n    at = Math.min(Math.max(at, 0), array.length);\n    var tail = Array(array.length - at);\n    var length = insert.length;\n    var i;\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\n  };\n\n  // Define the Collection's inheritable methods.\n  _.extend(Collection.prototype, Events, {\n\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n\n\n    // preinitialize is an empty function by default. You can override it with a function\n    // or object.  preinitialize will run before any instantiation logic is run in the Collection.\n    preinitialize: function(){},\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function(options) {\n      return this.map(function(model) { return model.toJSON(options); });\n    },\n\n    // Proxy `Backbone.sync` by default.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Add a model, or list of models to the set. `models` may be Backbone\n    // Models or raw JavaScript objects to be converted to Models, or any\n    // combination of the two.\n    add: function(models, options) {\n      return this.set(models, _.extend({merge: false}, options, addOptions));\n    },\n\n    // Remove a model, or a list of models from the set.\n    remove: function(models, options) {\n      options = _.extend({}, options);\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n      var removed = this._removeModels(models, options);\n      if (!options.silent && removed.length) {\n        options.changes = {added: [], merged: [], removed: removed};\n        this.trigger('update', this, options);\n      }\n      return singular ? removed[0] : removed;\n    },\n\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n    set: function(models, options) {\n      if (models == null) return;\n\n      options = _.extend({}, setOptions, options);\n      if (options.parse && !this._isModel(models)) {\n        models = this.parse(models, options) || [];\n      }\n\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n\n      var at = options.at;\n      if (at != null) at = +at;\n      if (at > this.length) at = this.length;\n      if (at < 0) at += this.length + 1;\n\n      var set = [];\n      var toAdd = [];\n      var toMerge = [];\n      var toRemove = [];\n      var modelMap = {};\n\n      var add = options.add;\n      var merge = options.merge;\n      var remove = options.remove;\n\n      var sort = false;\n      var sortable = this.comparator && at == null && options.sort !== false;\n      var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n\n      // Turn bare objects into model references, and prevent invalid models\n      // from being added.\n      var model, i;\n      for (i = 0; i < models.length; i++) {\n        model = models[i];\n\n        // If a duplicate is found, prevent it from being added and\n        // optionally merge it into the existing model.\n        var existing = this.get(model);\n        if (existing) {\n          if (merge && model !== existing) {\n            var attrs = this._isModel(model) ? model.attributes : model;\n            if (options.parse) attrs = existing.parse(attrs, options);\n            existing.set(attrs, options);\n            toMerge.push(existing);\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\n          }\n          if (!modelMap[existing.cid]) {\n            modelMap[existing.cid] = true;\n            set.push(existing);\n          }\n          models[i] = existing;\n\n        // If this is a new, valid model, push it to the `toAdd` list.\n        } else if (add) {\n          model = models[i] = this._prepareModel(model, options);\n          if (model) {\n            toAdd.push(model);\n            this._addReference(model, options);\n            modelMap[model.cid] = true;\n            set.push(model);\n          }\n        }\n      }\n\n      // Remove stale models.\n      if (remove) {\n        for (i = 0; i < this.length; i++) {\n          model = this.models[i];\n          if (!modelMap[model.cid]) toRemove.push(model);\n        }\n        if (toRemove.length) this._removeModels(toRemove, options);\n      }\n\n      // See if sorting is needed, update `length` and splice in new models.\n      var orderChanged = false;\n      var replace = !sortable && add && remove;\n      if (set.length && replace) {\n        orderChanged = this.length !== set.length || _.some(this.models, function(m, index) {\n          return m !== set[index];\n        });\n        this.models.length = 0;\n        splice(this.models, set, 0);\n        this.length = this.models.length;\n      } else if (toAdd.length) {\n        if (sortable) sort = true;\n        splice(this.models, toAdd, at == null ? this.length : at);\n        this.length = this.models.length;\n      }\n\n      // Silently sort the collection if appropriate.\n      if (sort) this.sort({silent: true});\n\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\n      if (!options.silent) {\n        for (i = 0; i < toAdd.length; i++) {\n          if (at != null) options.index = at + i;\n          model = toAdd[i];\n          model.trigger('add', model, this, options);\n        }\n        if (sort || orderChanged) this.trigger('sort', this, options);\n        if (toAdd.length || toRemove.length || toMerge.length) {\n          options.changes = {\n            added: toAdd,\n            removed: toRemove,\n            merged: toMerge\n          };\n          this.trigger('update', this, options);\n        }\n      }\n\n      // Return the added (or merged) model (or models).\n      return singular ? models[0] : models;\n    },\n\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n    reset: function(models, options) {\n      options = options ? _.clone(options) : {};\n      for (var i = 0; i < this.models.length; i++) {\n        this._removeReference(this.models[i], options);\n      }\n      options.previousModels = this.models;\n      this._reset();\n      models = this.add(models, _.extend({silent: true}, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return models;\n    },\n\n    // Add a model to the end of the collection.\n    push: function(model, options) {\n      return this.add(model, _.extend({at: this.length}, options));\n    },\n\n    // Remove a model from the end of the collection.\n    pop: function(options) {\n      var model = this.at(this.length - 1);\n      return this.remove(model, options);\n    },\n\n    // Add a model to the beginning of the collection.\n    unshift: function(model, options) {\n      return this.add(model, _.extend({at: 0}, options));\n    },\n\n    // Remove a model from the beginning of the collection.\n    shift: function(options) {\n      var model = this.at(0);\n      return this.remove(model, options);\n    },\n\n    // Slice out a sub-array of models from the collection.\n    slice: function() {\n      return slice.apply(this.models, arguments);\n    },\n\n    // Get a model from the set by id, cid, model object with id or cid\n    // properties, or an attributes object that is transformed through modelId.\n    get: function(obj) {\n      if (obj == null) return void 0;\n      return this._byId[obj] ||\n        this._byId[this.modelId(this._isModel(obj) ? obj.attributes : obj)] ||\n        obj.cid && this._byId[obj.cid];\n    },\n\n    // Returns `true` if the model is in the collection.\n    has: function(obj) {\n      return this.get(obj) != null;\n    },\n\n    // Get the model at the given index.\n    at: function(index) {\n      if (index < 0) index += this.length;\n      return this.models[index];\n    },\n\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n    where: function(attrs, first) {\n      return this[first ? 'find' : 'filter'](attrs);\n    },\n\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n    findWhere: function(attrs) {\n      return this.where(attrs, true);\n    },\n\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function(options) {\n      var comparator = this.comparator;\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\n      options || (options = {});\n\n      var length = comparator.length;\n      if (_.isFunction(comparator)) comparator = comparator.bind(this);\n\n      // Run sort based on type of `comparator`.\n      if (length === 1 || _.isString(comparator)) {\n        this.models = this.sortBy(comparator);\n      } else {\n        this.models.sort(comparator);\n      }\n      if (!options.silent) this.trigger('sort', this, options);\n      return this;\n    },\n\n    // Pluck an attribute from each model in the collection.\n    pluck: function(attr) {\n      return this.map(attr + '');\n    },\n\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var success = options.success;\n      var collection = this;\n      options.success = function(resp) {\n        var method = options.reset ? 'reset' : 'set';\n        collection[method](resp, options);\n        if (success) success.call(options.context, collection, resp, options);\n        collection.trigger('sync', collection, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function(model, options) {\n      options = options ? _.clone(options) : {};\n      var wait = options.wait;\n      model = this._prepareModel(model, options);\n      if (!model) return false;\n      if (!wait) this.add(model, options);\n      var collection = this;\n      var success = options.success;\n      options.success = function(m, resp, callbackOpts) {\n        if (wait) collection.add(m, callbackOpts);\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\n      };\n      model.save(null, options);\n      return model;\n    },\n\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new collection with an identical list of models as this one.\n    clone: function() {\n      return new this.constructor(this.models, {\n        model: this.model,\n        comparator: this.comparator\n      });\n    },\n\n    // Define how to uniquely identify models in the collection.\n    modelId: function(attrs) {\n      return attrs[this.model.prototype.idAttribute || 'id'];\n    },\n\n    // Get an iterator of all models in this collection.\n    values: function() {\n      return new CollectionIterator(this, ITERATOR_VALUES);\n    },\n\n    // Get an iterator of all model IDs in this collection.\n    keys: function() {\n      return new CollectionIterator(this, ITERATOR_KEYS);\n    },\n\n    // Get an iterator of all [ID, model] tuples in this collection.\n    entries: function() {\n      return new CollectionIterator(this, ITERATOR_KEYSVALUES);\n    },\n\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n    _reset: function() {\n      this.length = 0;\n      this.models = [];\n      this._byId  = {};\n    },\n\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n    _prepareModel: function(attrs, options) {\n      if (this._isModel(attrs)) {\n        if (!attrs.collection) attrs.collection = this;\n        return attrs;\n      }\n      options = options ? _.clone(options) : {};\n      options.collection = this;\n      var model = new this.model(attrs, options);\n      if (!model.validationError) return model;\n      this.trigger('invalid', this, model.validationError, options);\n      return false;\n    },\n\n    // Internal method called by both remove and set.\n    _removeModels: function(models, options) {\n      var removed = [];\n      for (var i = 0; i < models.length; i++) {\n        var model = this.get(models[i]);\n        if (!model) continue;\n\n        var index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--;\n\n        // Remove references before triggering 'remove' event to prevent an\n        // infinite loop. #3693\n        delete this._byId[model.cid];\n        var id = this.modelId(model.attributes);\n        if (id != null) delete this._byId[id];\n\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n\n        removed.push(model);\n        this._removeReference(model, options);\n      }\n      return removed;\n    },\n\n    // Method for checking whether an object should be considered a model for\n    // the purposes of adding to the collection.\n    _isModel: function(model) {\n      return model instanceof Model;\n    },\n\n    // Internal method to create a model's ties to a collection.\n    _addReference: function(model, options) {\n      this._byId[model.cid] = model;\n      var id = this.modelId(model.attributes);\n      if (id != null) this._byId[id] = model;\n      model.on('all', this._onModelEvent, this);\n    },\n\n    // Internal method to sever a model's ties to a collection.\n    _removeReference: function(model, options) {\n      delete this._byId[model.cid];\n      var id = this.modelId(model.attributes);\n      if (id != null) delete this._byId[id];\n      if (this === model.collection) delete model.collection;\n      model.off('all', this._onModelEvent, this);\n    },\n\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function(event, model, collection, options) {\n      if (model) {\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\n        if (event === 'destroy') this.remove(model, options);\n        if (event === 'change') {\n          var prevId = this.modelId(model.previousAttributes());\n          var id = this.modelId(model.attributes);\n          if (prevId !== id) {\n            if (prevId != null) delete this._byId[prevId];\n            if (id != null) this._byId[id] = model;\n          }\n        }\n      }\n      this.trigger.apply(this, arguments);\n    }\n\n  });\n\n  // Defining an @@iterator method implements JavaScript's Iterable protocol.\n  // In modern ES2015 browsers, this value is found at Symbol.iterator.\n  /* global Symbol */\n  var $$iterator = typeof Symbol === 'function' && Symbol.iterator;\n  if ($$iterator) {\n    Collection.prototype[$$iterator] = Collection.prototype.values;\n  }\n\n  // CollectionIterator\n  // ------------------\n\n  // A CollectionIterator implements JavaScript's Iterator protocol, allowing the\n  // use of `for of` loops in modern browsers and interoperation between\n  // Backbone.Collection and other JavaScript functions and third-party libraries\n  // which can operate on Iterables.\n  var CollectionIterator = function(collection, kind) {\n    this._collection = collection;\n    this._kind = kind;\n    this._index = 0;\n  };\n\n  // This \"enum\" defines the three possible kinds of values which can be emitted\n  // by a CollectionIterator that correspond to the values(), keys() and entries()\n  // methods on Collection, respectively.\n  var ITERATOR_VALUES = 1;\n  var ITERATOR_KEYS = 2;\n  var ITERATOR_KEYSVALUES = 3;\n\n  // All Iterators should themselves be Iterable.\n  if ($$iterator) {\n    CollectionIterator.prototype[$$iterator] = function() {\n      return this;\n    };\n  }\n\n  CollectionIterator.prototype.next = function() {\n    if (this._collection) {\n\n      // Only continue iterating if the iterated collection is long enough.\n      if (this._index < this._collection.length) {\n        var model = this._collection.at(this._index);\n        this._index++;\n\n        // Construct a value depending on what kind of values should be iterated.\n        var value;\n        if (this._kind === ITERATOR_VALUES) {\n          value = model;\n        } else {\n          var id = this._collection.modelId(model.attributes);\n          if (this._kind === ITERATOR_KEYS) {\n            value = id;\n          } else { // ITERATOR_KEYSVALUES\n            value = [id, model];\n          }\n        }\n        return {value: value, done: false};\n      }\n\n      // Once exhausted, remove the reference to the collection so future\n      // calls to the next method always return done.\n      this._collection = void 0;\n    }\n\n    return {value: void 0, done: true};\n  };\n\n  // Backbone.View\n  // -------------\n\n  // Backbone Views are almost more convention than they are actual code. A View\n  // is simply a JavaScript object that represents a logical chunk of UI in the\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\n  // UI as a **View** allows you to define your DOM events declaratively, without\n  // having to worry about render order ... and makes it easy for the view to\n  // react to specific changes in the state of your models.\n\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function(options) {\n    this.cid = _.uniqueId('view');\n    this.preinitialize.apply(this, arguments);\n    _.extend(this, _.pick(options, viewOptions));\n    this._ensureElement();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regex to split keys for `delegate`.\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n  // List of view options to be set as properties.\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n  // Set up all inheritable **Backbone.View** properties and methods.\n  _.extend(View.prototype, Events, {\n\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be preferred to global lookups where possible.\n    $: function(selector) {\n      return this.$el.find(selector);\n    },\n\n    // preinitialize is an empty function by default. You can override it with a function\n    // or object.  preinitialize will run before any instantiation logic is run in the View\n    preinitialize: function(){},\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function() {\n      return this;\n    },\n\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n    remove: function() {\n      this._removeElement();\n      this.stopListening();\n      return this;\n    },\n\n    // Remove this view's element from the document and all event listeners\n    // attached to it. Exposed for subclasses using an alternative DOM\n    // manipulation API.\n    _removeElement: function() {\n      this.$el.remove();\n    },\n\n    // Change the view's element (`this.el` property) and re-delegate the\n    // view's events on the new element.\n    setElement: function(element) {\n      this.undelegateEvents();\n      this._setElement(element);\n      this.delegateEvents();\n      return this;\n    },\n\n    // Creates the `this.el` and `this.$el` references for this view using the\n    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n    // context or an element. Subclasses can override this to utilize an\n    // alternative DOM manipulation API and are only required to set the\n    // `this.el` property.\n    _setElement: function(el) {\n      this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);\n      this.el = this.$el[0];\n    },\n\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    delegateEvents: function(events) {\n      events || (events = _.result(this, 'events'));\n      if (!events) return this;\n      this.undelegateEvents();\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[method];\n        if (!method) continue;\n        var match = key.match(delegateEventSplitter);\n        this.delegate(match[1], match[2], method.bind(this));\n      }\n      return this;\n    },\n\n    // Add a single event listener to the view's element (or a child element\n    // using `selector`). This only works for delegate-able events: not `focus`,\n    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n    delegate: function(eventName, selector, listener) {\n      this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Clears all callbacks previously bound to the view by `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function() {\n      if (this.$el) this.$el.off('.delegateEvents' + this.cid);\n      return this;\n    },\n\n    // A finer-grained `undelegateEvents` for removing a single delegated event.\n    // `selector` and `listener` are both optional.\n    undelegate: function(eventName, selector, listener) {\n      this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Produces a DOM element to be assigned to your view. Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _createElement: function(tagName) {\n      return document.createElement(tagName);\n    },\n\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function() {\n      if (!this.el) {\n        var attrs = _.extend({}, _.result(this, 'attributes'));\n        if (this.id) attrs.id = _.result(this, 'id');\n        if (this.className) attrs['class'] = _.result(this, 'className');\n        this.setElement(this._createElement(_.result(this, 'tagName')));\n        this._setAttributes(attrs);\n      } else {\n        this.setElement(_.result(this, 'el'));\n      }\n    },\n\n    // Set attributes from a hash on this view's element.  Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _setAttributes: function(attributes) {\n      this.$el.attr(attributes);\n    }\n\n  });\n\n  // Proxy Backbone class methods to Underscore functions, wrapping the model's\n  // `attributes` object or collection's `models` array behind the scenes.\n  //\n  // collection.filter(function(model) { return model.get('age') > 10 });\n  // collection.each(this.addView);\n  //\n  // `Function#apply` can be slow so we use the method's arg count, if we know it.\n  var addMethod = function(base, length, method, attribute) {\n    switch (length) {\n      case 1: return function() {\n        return base[method](this[attribute]);\n      };\n      case 2: return function(value) {\n        return base[method](this[attribute], value);\n      };\n      case 3: return function(iteratee, context) {\n        return base[method](this[attribute], cb(iteratee, this), context);\n      };\n      case 4: return function(iteratee, defaultVal, context) {\n        return base[method](this[attribute], cb(iteratee, this), defaultVal, context);\n      };\n      default: return function() {\n        var args = slice.call(arguments);\n        args.unshift(this[attribute]);\n        return base[method].apply(base, args);\n      };\n    }\n  };\n\n  var addUnderscoreMethods = function(Class, base, methods, attribute) {\n    _.each(methods, function(length, method) {\n      if (base[method]) Class.prototype[method] = addMethod(base, length, method, attribute);\n    });\n  };\n\n  // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\n  var cb = function(iteratee, instance) {\n    if (_.isFunction(iteratee)) return iteratee;\n    if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\n    if (_.isString(iteratee)) return function(model) { return model.get(iteratee); };\n    return iteratee;\n  };\n  var modelMatcher = function(attrs) {\n    var matcher = _.matches(attrs);\n    return function(model) {\n      return matcher(model.attributes);\n    };\n  };\n\n  // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n  var collectionMethods = {forEach: 3, each: 3, map: 3, collect: 3, reduce: 0,\n    foldl: 0, inject: 0, reduceRight: 0, foldr: 0, find: 3, detect: 3, filter: 3,\n    select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 3, includes: 3,\n    contains: 3, invoke: 0, max: 3, min: 3, toArray: 1, size: 1, first: 3,\n    head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,\n    without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,\n    isEmpty: 1, chain: 1, sample: 3, partition: 3, groupBy: 3, countBy: 3,\n    sortBy: 3, indexBy: 3, findIndex: 3, findLastIndex: 3};\n\n\n  // Underscore methods that we want to implement on the Model, mapped to the\n  // number of arguments they take.\n  var modelMethods = {keys: 1, values: 1, pairs: 1, invert: 1, pick: 0,\n    omit: 0, chain: 1, isEmpty: 1};\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n\n  _.each([\n    [Collection, collectionMethods, 'models'],\n    [Model, modelMethods, 'attributes']\n  ], function(config) {\n    var Base = config[0],\n        methods = config[1],\n        attribute = config[2];\n\n    Base.mixin = function(obj) {\n      var mappings = _.reduce(_.functions(obj), function(memo, name) {\n        memo[name] = 0;\n        return memo;\n      }, {});\n      addUnderscoreMethods(Base, obj, mappings, attribute);\n    };\n\n    addUnderscoreMethods(Base, _, methods, attribute);\n  });\n\n  // Backbone.sync\n  // -------------\n\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n  Backbone.sync = function(method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    _.defaults(options || (options = {}), {\n      emulateHTTP: Backbone.emulateHTTP,\n      emulateJSON: Backbone.emulateJSON\n    });\n\n    // Default JSON-request options.\n    var params = {type: type, dataType: 'json'};\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n      params.url = _.result(model, 'url') || urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (options.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? {model: params.data} : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n      params.type = 'POST';\n      if (options.emulateJSON) params.data._method = type;\n      var beforeSend = options.beforeSend;\n      options.beforeSend = function(xhr) {\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        if (beforeSend) return beforeSend.apply(this, arguments);\n      };\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !options.emulateJSON) {\n      params.processData = false;\n    }\n\n    // Pass along `textStatus` and `errorThrown` from jQuery.\n    var error = options.error;\n    options.error = function(xhr, textStatus, errorThrown) {\n      options.textStatus = textStatus;\n      options.errorThrown = errorThrown;\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\n    };\n\n    // Make the request, allowing the user to override any Ajax options.\n    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n    model.trigger('request', model, xhr, options);\n    return xhr;\n  };\n\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n  var methodMap = {\n    create: 'POST',\n    update: 'PUT',\n    patch: 'PATCH',\n    delete: 'DELETE',\n    read: 'GET'\n  };\n\n  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n  // Override this if you'd like to use a different library.\n  Backbone.ajax = function() {\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\n  };\n\n  // Backbone.Router\n  // ---------------\n\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n  var Router = Backbone.Router = function(options) {\n    options || (options = {});\n    this.preinitialize.apply(this, arguments);\n    if (options.routes) this.routes = options.routes;\n    this._bindRoutes();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n  var optionalParam = /\\((.*?)\\)/g;\n  var namedParam    = /(\\(\\?)?:\\w+/g;\n  var splatParam    = /\\*\\w+/g;\n  var escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n  // Set up all inheritable **Backbone.Router** properties and methods.\n  _.extend(Router.prototype, Events, {\n\n    // preinitialize is an empty function by default. You can override it with a function\n    // or object.  preinitialize will run before any instantiation logic is run in the Router.\n    preinitialize: function(){},\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function(route, name, callback) {\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n      if (!callback) callback = this[name];\n      var router = this;\n      Backbone.history.route(route, function(fragment) {\n        var args = router._extractParameters(route, fragment);\n        if (router.execute(callback, args, name) !== false) {\n          router.trigger.apply(router, ['route:' + name].concat(args));\n          router.trigger('route', name, args);\n          Backbone.history.trigger('route', router, name, args);\n        }\n      });\n      return this;\n    },\n\n    // Execute a route handler with the provided parameters.  This is an\n    // excellent place to do pre-route setup or post-route cleanup.\n    execute: function(callback, args, name) {\n      if (callback) callback.apply(this, args);\n    },\n\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function(fragment, options) {\n      Backbone.history.navigate(fragment, options);\n      return this;\n    },\n\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function() {\n      if (!this.routes) return;\n      this.routes = _.result(this, 'routes');\n      var route, routes = _.keys(this.routes);\n      while ((route = routes.pop()) != null) {\n        this.route(route, this.routes[route]);\n      }\n    },\n\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function(route) {\n      route = route.replace(escapeRegExp, '\\\\$&')\n        .replace(optionalParam, '(?:$1)?')\n        .replace(namedParam, function(match, optional) {\n          return optional ? match : '([^/?]+)';\n        })\n        .replace(splatParam, '([^?]*?)');\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n    },\n\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted decoded parameters. Empty or unmatched parameters will be\n    // treated as `null` to normalize cross-browser behavior.\n    _extractParameters: function(route, fragment) {\n      var params = route.exec(fragment).slice(1);\n      return _.map(params, function(param, i) {\n        // Don't decode the search params.\n        if (i === params.length - 1) return param || null;\n        return param ? decodeURIComponent(param) : null;\n      });\n    }\n\n  });\n\n  // Backbone.History\n  // ----------------\n\n  // Handles cross-browser history management, based on either\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n  // and URL fragments. If the browser supports neither (old IE, natch),\n  // falls back to polling.\n  var History = Backbone.History = function() {\n    this.handlers = [];\n    this.checkUrl = this.checkUrl.bind(this);\n\n    // Ensure that `History` can be used outside of the browser.\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n  };\n\n  // Cached regex for stripping a leading hash/slash and trailing space.\n  var routeStripper = /^[#\\/]|\\s+$/g;\n\n  // Cached regex for stripping leading and trailing slashes.\n  var rootStripper = /^\\/+|\\/+$/g;\n\n  // Cached regex for stripping urls of hash.\n  var pathStripper = /#.*$/;\n\n  // Has the history handling already been started?\n  History.started = false;\n\n  // Set up all inheritable **Backbone.History** properties and methods.\n  _.extend(History.prototype, Events, {\n\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n\n    // Are we at the app root?\n    atRoot: function() {\n      var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n      return path === this.root && !this.getSearch();\n    },\n\n    // Does the pathname match the root?\n    matchRoot: function() {\n      var path = this.decodeFragment(this.location.pathname);\n      var rootPath = path.slice(0, this.root.length - 1) + '/';\n      return rootPath === this.root;\n    },\n\n    // Unicode characters in `location.pathname` are percent encoded so they're\n    // decoded for comparison. `%25` should not be decoded since it may be part\n    // of an encoded parameter.\n    decodeFragment: function(fragment) {\n      return decodeURI(fragment.replace(/%25/g, '%2525'));\n    },\n\n    // In IE6, the hash fragment and search params are incorrect if the\n    // fragment contains `?`.\n    getSearch: function() {\n      var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\n      return match ? match[0] : '';\n    },\n\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function(window) {\n      var match = (window || this).location.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n\n    // Get the pathname and search params, without the root.\n    getPath: function() {\n      var path = this.decodeFragment(\n        this.location.pathname + this.getSearch()\n      ).slice(this.root.length - 1);\n      return path.charAt(0) === '/' ? path.slice(1) : path;\n    },\n\n    // Get the cross-browser normalized URL fragment from the path or hash.\n    getFragment: function(fragment) {\n      if (fragment == null) {\n        if (this._usePushState || !this._wantsHashChange) {\n          fragment = this.getPath();\n        } else {\n          fragment = this.getHash();\n        }\n      }\n      return fragment.replace(routeStripper, '');\n    },\n\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function(options) {\n      if (History.started) throw new Error('Backbone.history has already been started');\n      History.started = true;\n\n      // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n      this.options          = _.extend({root: '/'}, this.options, options);\n      this.root             = this.options.root;\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._hasHashChange   = 'onhashchange' in window && (document.documentMode === void 0 || document.documentMode > 7);\n      this._useHashChange   = this._wantsHashChange && this._hasHashChange;\n      this._wantsPushState  = !!this.options.pushState;\n      this._hasPushState    = !!(this.history && this.history.pushState);\n      this._usePushState    = this._wantsPushState && this._hasPushState;\n      this.fragment         = this.getFragment();\n\n      // Normalize root to always include a leading and trailing slash.\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/');\n\n      // Transition from hashChange to pushState or vice versa if both are\n      // requested.\n      if (this._wantsHashChange && this._wantsPushState) {\n\n        // If we've started off with a route from a `pushState`-enabled\n        // browser, but we're currently in a browser that doesn't support it...\n        if (!this._hasPushState && !this.atRoot()) {\n          var rootPath = this.root.slice(0, -1) || '/';\n          this.location.replace(rootPath + '#' + this.getPath());\n          // Return immediately as browser will do redirect to new url\n          return true;\n\n        // Or if we've started out with a hash-based route, but we're currently\n        // in a browser where it could be `pushState`-based instead...\n        } else if (this._hasPushState && this.atRoot()) {\n          this.navigate(this.getHash(), {replace: true});\n        }\n\n      }\n\n      // Proxy an iframe to handle location events if the browser doesn't\n      // support the `hashchange` event, HTML5 history, or the user wants\n      // `hashChange` but not `pushState`.\n      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\n        this.iframe = document.createElement('iframe');\n        this.iframe.src = 'javascript:0';\n        this.iframe.style.display = 'none';\n        this.iframe.tabIndex = -1;\n        var body = document.body;\n        // Using `appendChild` will throw on IE < 9 if the document is not ready.\n        var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;\n        iWindow.document.open();\n        iWindow.document.close();\n        iWindow.location.hash = '#' + this.fragment;\n      }\n\n      // Add a cross-platform `addEventListener` shim for older browsers.\n      var addEventListener = window.addEventListener || function(eventName, listener) {\n        return attachEvent('on' + eventName, listener);\n      };\n\n      // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n      if (this._usePushState) {\n        addEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        addEventListener('hashchange', this.checkUrl, false);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n\n      if (!this.options.silent) return this.loadUrl();\n    },\n\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function() {\n      // Add a cross-platform `removeEventListener` shim for older browsers.\n      var removeEventListener = window.removeEventListener || function(eventName, listener) {\n        return detachEvent('on' + eventName, listener);\n      };\n\n      // Remove window listeners.\n      if (this._usePushState) {\n        removeEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        removeEventListener('hashchange', this.checkUrl, false);\n      }\n\n      // Clean up the iframe if necessary.\n      if (this.iframe) {\n        document.body.removeChild(this.iframe);\n        this.iframe = null;\n      }\n\n      // Some environments will throw when clearing an undefined interval.\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function(route, callback) {\n      this.handlers.unshift({route: route, callback: callback});\n    },\n\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function(e) {\n      var current = this.getFragment();\n\n      // If the user pressed the back button, the iframe's hash will have\n      // changed and we should use that for comparison.\n      if (current === this.fragment && this.iframe) {\n        current = this.getHash(this.iframe.contentWindow);\n      }\n\n      if (current === this.fragment) return false;\n      if (this.iframe) this.navigate(current);\n      this.loadUrl();\n    },\n\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function(fragment) {\n      // If the root doesn't match, no routes can match either.\n      if (!this.matchRoot()) return false;\n      fragment = this.fragment = this.getFragment(fragment);\n      return _.some(this.handlers, function(handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      });\n    },\n\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function(fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = {trigger: !!options};\n\n      // Normalize the fragment.\n      fragment = this.getFragment(fragment || '');\n\n      // Don't include a trailing slash on the root.\n      var rootPath = this.root;\n      if (fragment === '' || fragment.charAt(0) === '?') {\n        rootPath = rootPath.slice(0, -1) || '/';\n      }\n      var url = rootPath + fragment;\n\n      // Strip the fragment of the query and hash for matching.\n      fragment = fragment.replace(pathStripper, '');\n\n      // Decode for matching.\n      var decodedFragment = this.decodeFragment(fragment);\n\n      if (this.fragment === decodedFragment) return;\n      this.fragment = decodedFragment;\n\n      // If pushState is available, we use it to set the fragment as a real URL.\n      if (this._usePushState) {\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n      // If hash changes haven't been explicitly disabled, update the hash\n      // fragment to store history.\n      } else if (this._wantsHashChange) {\n        this._updateHash(this.location, fragment, options.replace);\n        if (this.iframe && fragment !== this.getHash(this.iframe.contentWindow)) {\n          var iWindow = this.iframe.contentWindow;\n\n          // Opening and closing the iframe tricks IE7 and earlier to push a\n          // history entry on hash-tag change.  When replace is true, we don't\n          // want this.\n          if (!options.replace) {\n            iWindow.document.open();\n            iWindow.document.close();\n          }\n\n          this._updateHash(iWindow.location, fragment, options.replace);\n        }\n\n      // If you've told us that you explicitly don't want fallback hashchange-\n      // based history, then `navigate` becomes a page refresh.\n      } else {\n        return this.location.assign(url);\n      }\n      if (options.trigger) return this.loadUrl(fragment);\n    },\n\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function(location, fragment, replace) {\n      if (replace) {\n        var href = location.href.replace(/(javascript:|#).*$/, '');\n        location.replace(href + '#' + fragment);\n      } else {\n        // Some browsers require that `hash` contains a leading #.\n        location.hash = '#' + fragment;\n      }\n    }\n\n  });\n\n  // Create the default Backbone.history.\n  Backbone.history = new History;\n\n  // Helpers\n  // -------\n\n  // Helper function to correctly set up the prototype chain for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n  var extend = function(protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent constructor.\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function(){ return parent.apply(this, arguments); };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function and add the prototype properties.\n    child.prototype = _.create(parent.prototype, protoProps);\n    child.prototype.constructor = child;\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    return child;\n  };\n\n  // Set up inheritance for the model, collection, router, view and history.\n  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\n\n  // Throw an error when a URL is needed, and none is supplied.\n  var urlError = function() {\n    throw new Error('A \"url\" property or function must be specified');\n  };\n\n  // Wrap an optional error callback with a fallback error event.\n  var wrapError = function(model, options) {\n    var error = options.error;\n    options.error = function(resp) {\n      if (error) error.call(options.context, model, resp, options);\n      model.trigger('error', model, resp, options);\n    };\n  };\n\n  return Backbone;\n});\n"],"names":["factory","root","self","global","define","amd","_","$","exports","Backbone","require","e","jQuery","Zepto","ender","previousBackbone","slice","Array","prototype","VERSION","noConflict","this","emulateHTTP","emulateJSON","_listening","Events","eventSplitter","eventsApi","iteratee","events","name","callback","opts","names","i","context","keys","length","test","split","on","_events","onApi","ctx","listening","_listeners","id","interop","listenTo","obj","_listenId","uniqueId","listeningTo","_listeningTo","Listening","error","tryCatchOn","options","handlers","count","push","off","offApi","listeners","stopListening","ids","isEmpty","remaining","j","handler","_callback","cleanup","once","onceMap","bind","listenToOnce","map","offer","apply","arguments","trigger","Math","max","args","triggerApi","objEvents","allEvents","all","triggerEvents","concat","ev","l","a1","a2","a3","call","listener","unbind","extend","Model","attributes","attrs","preinitialize","cid","cidPrefix","collection","parse","defaults","result","set","changed","initialize","validationError","idAttribute","toJSON","clone","sync","get","attr","escape","has","matches","key","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","isEqual","_pending","clear","hasChanged","changedAttributes","diff","old","previous","previousAttributes","fetch","model","success","resp","serverAttrs","wrapError","save","wait","validate","method","isNew","patch","xhr","destroy","defer","url","base","urlError","replace","encodeURIComponent","constructor","isValid","Collection","models","comparator","_reset","reset","setOptions","add","remove","merge","addOptions","splice","array","insert","at","min","tail","singular","isArray","removed","_removeModels","added","merged","_isModel","toAdd","toMerge","toRemove","modelMap","sort","sortable","sortAttr","isString","existing","_prepareModel","_addReference","orderChanged","some","m","index","_removeReference","previousModels","pop","unshift","shift","_byId","modelId","where","first","findWhere","Error","isFunction","sortBy","pluck","create","callbackOpts","values","CollectionIterator","ITERATOR_VALUES","ITERATOR_KEYS","entries","ITERATOR_KEYSVALUES","indexOf","_onModelEvent","event","prevId","$$iterator","Symbol","iterator","kind","_collection","_kind","_index","next","value","done","View","pick","viewOptions","_ensureElement","delegateEventSplitter","tagName","selector","$el","find","render","_removeElement","setElement","element","undelegateEvents","_setElement","delegateEvents","el","match","delegate","eventName","undelegate","_createElement","document","createElement","className","_setAttributes","addUnderscoreMethods","Class","methods","attribute","each","cb","defaultVal","addMethod","instance","isObject","modelMatcher","matcher","forEach","collect","reduce","foldl","inject","reduceRight","foldr","detect","filter","select","reject","every","any","include","includes","contains","invoke","toArray","size","head","take","initial","rest","drop","last","without","difference","shuffle","lastIndexOf","chain","sample","partition","groupBy","countBy","indexBy","findIndex","findLastIndex","pairs","invert","omit","config","Base","mixin","mappings","functions","memo","type","methodMap","params","dataType","data","contentType","JSON","stringify","_method","beforeSend","setRequestHeader","processData","textStatus","errorThrown","ajax","update","delete","read","Router","routes","_bindRoutes","optionalParam","namedParam","splatParam","escapeRegExp","route","isRegExp","_routeToRegExp","router","history","fragment","_extractParameters","execute","navigate","optional","RegExp","exec","param","decodeURIComponent","History","checkUrl","window","location","routeStripper","rootStripper","pathStripper","started","interval","atRoot","pathname","getSearch","matchRoot","decodeFragment","decodeURI","href","getHash","getPath","path","charAt","getFragment","_usePushState","_wantsHashChange","start","hashChange","_hasHashChange","documentMode","_useHashChange","_wantsPushState","pushState","_hasPushState","rootPath","iframe","src","style","display","tabIndex","body","iWindow","insertBefore","firstChild","contentWindow","open","close","hash","addEventListener","attachEvent","_checkUrlInterval","setInterval","loadUrl","stop","removeEventListener","detachEvent","removeChild","clearInterval","decodedFragment","title","assign","_updateHash","protoProps","staticProps","child","parent","__super__"],"mappings":"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"}