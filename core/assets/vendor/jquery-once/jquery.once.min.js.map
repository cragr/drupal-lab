{"version":3,"file":"jquery.once.min.js","sources":["jquery.once.js"],"sourcesContent":["/*!\n * jQuery Once v2.2.3 - http://github.com/robloach/jquery-once\n * @license MIT, GPL-2.0\n *   http://opensource.org/licenses/MIT\n *   http://opensource.org/licenses/GPL-2.0\n */\n\n/**\n * Universal Module Definition\n *\n * jQuery Once has a dependency on jQuery, so we wrap the code with a UMD\n * pattern in order to allow loading jQuery and jQuery Once through a module\n * definition like CommonJS, AMD, or through a global object.\n *\n * @see {@link http://github.com/umdjs/umd}\n */\n(function (factory) {\n  'use strict';\n\n  if (typeof exports === 'object' && typeof exports.nodeName !== 'string') {\n    // CommonJS\n    factory(require('jquery'));\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD\n    /* globals define */\n    define(['jquery'], factory);\n  } else {\n    // Global object\n    /* globals jQuery */\n    factory(jQuery);\n  }\n})(function ($) {\n  'use strict';\n\n  /**\n   * Ensures that the given ID is valid, returning 'once' if one is not given.\n   *\n   * @param {string} [id=once]\n   *   A string representing the ID to check. Defaults to `'once'`.\n   *\n   * @returns {number} The valid ID name.\n   *\n   * @throws TypeError when an ID is provided, but not a string.\n   * @private\n   */\n  var checkId = function (id) {\n    id = id || 'once';\n    if (typeof id !== 'string') {\n      throw new TypeError('The jQuery Once id parameter must be a string');\n    }\n\n    return id;\n  };\n\n  /**\n   * Filter elements that have yet to be processed by the given data ID.\n   *\n   * @param {string} [id=once]\n   *   The data ID used to determine whether the given elements have already\n   *   been processed or not. Defaults to `'once'`.\n   *\n   * @returns {jQuery} jQuery collection of elements that have now run once by\n   *   the given ID.\n   *\n   * @example\n   * ``` javascript\n   * // The following will change the color of each paragraph to red, just once\n   * // for the 'changecolor' key.\n   * $('p').once('changecolor').css('color', 'red');\n   *\n   * // .once() will return a set of elements that yet to have the once ID\n   * // associated with them. You can return to the original collection set by\n   * // using .end().\n   * $('p')\n   *   .once('changecolorblue')\n   *     .css('color', 'blue')\n   *   .end()\n   *   .css('color', 'red');\n   *\n   * // To execute a function on the once set, you can use jQuery's each().\n   * $('div.calendar').once().each(function () {\n   *   // Since there is no once ID provided here, the key will be 'once'.\n   * });\n   * ```\n   *\n   * @see removeOnce\n   * @see findOnce\n   * @this jQuery\n   *\n   * @global\n   * @public\n   */\n  $.fn.once = function (id) {\n    // Build the jQuery Once data name from the provided ID.\n    var name = 'jquery-once-' + checkId(id);\n\n    // Find elements that don't have the jQuery Once data applied to them yet.\n    return this.filter(function () {\n      return $(this).data(name) !== true;\n    }).data(name, true);\n  };\n\n  /**\n   * Removes the once data from elements, based on the given ID.\n   *\n   * @param {string} [id=once]\n   *   A string representing the name of the data ID which should be used when\n   *   filtering the elements. This only filters elements that have already been\n   *   processed by the once function. The ID should be the same ID that was\n   *   originally passed to the once() function. Defaults to `'once'`.\n   *\n   * @returns {jQuery} jQuery collection of elements that were acted upon to remove their\n   *    once data.\n   *\n   * @example\n   * ``` javascript\n   * // Remove once data with the 'changecolor' ID. The result set is the\n   * // elements that had their once data removed.\n   * $('p').removeOnce('changecolor').css('color', '');\n   *\n   * // Any jQuery function can be performed on the result set.\n   * $('div.calendar').removeOnce().each(function () {\n   *   // Remove the calendar behavior.\n   * });\n   * ```\n   *\n   * @see once\n   * @this jQuery\n   *\n   * @global\n   * @public\n   */\n  $.fn.removeOnce = function (id) {\n    // Filter through the elements to find the once'd elements.\n    return this.findOnce(id).removeData('jquery-once-' + checkId(id));\n  };\n\n  /**\n   * Filters elements that have already been processed once.\n   *\n   * @param {string} [id=once]\n   *   A string representing the name of the data id which should be used when\n   *   filtering the elements. This only filters elements that have already\n   *   been processed by the once function. The id should be the same id that\n   *   was originally passed to the once() function. Defaults to 'once'.\n   *\n   * @returns {jQuery} jQuery collection of elements that have been run once.\n   *\n   * @example\n   * ``` javascript\n   * // Find all elements that have been changecolor'ed once.\n   * $('p').findOnce('changecolor').each(function () {\n   *   // This function is called for all elements that has already once'd.\n   * });\n   *\n   * // Find all elements that have been acted on with the default 'once' key.\n   * $('p').findOnce().each(function () {\n   *   // This function is called for all elements that have been acted on with\n   *   // a 'once' action.\n   * });\n   * ```\n   *\n   * @see once\n   * @this jQuery\n   *\n   * @global\n   * @public\n   */\n  $.fn.findOnce = function (id) {\n    // Filter the elements by which do have the data.\n    var name = 'jquery-once-' + checkId(id);\n\n    return this.filter(function () {\n      return $(this).data(name) === true;\n    });\n  };\n});\n"],"names":["factory","exports","nodeName","require","define","amd","jQuery","$","checkId","id","TypeError","fn","once","name","this","filter","data","removeOnce","findOnce","removeData"],"mappings":";;;;;;CAgBA,SAAWA,GAGc,iBAAZC,SAAoD,iBAArBA,QAAQC,SAEhDF,EAAQG,QAAQ,WACW,mBAAXC,QAAyBA,OAAOC,IAGhDD,OAAO,CAAC,UAAWJ,GAInBA,EAAQM,QAbZ,EAeG,SAAUC,GAcX,IAAIC,EAAU,SAAUC,GAEtB,GAAkB,iBADlBA,EAAKA,GAAM,QAET,MAAM,IAAIC,UAAU,iDAGtB,OAAOD,GAyCTF,EAAEI,GAAGC,KAAO,SAAUH,GAEpB,IAAII,EAAO,eAAiBL,EAAQC,GAGpC,OAAOK,KAAKC,QAAO,WACjB,OAA8B,IAAvBR,EAAEO,MAAME,KAAKH,MACnBG,KAAKH,GAAM,IAiChBN,EAAEI,GAAGM,WAAa,SAAUR,GAE1B,OAAOK,KAAKI,SAAST,GAAIU,WAAW,eAAiBX,EAAQC,KAkC/DF,EAAEI,GAAGO,SAAW,SAAUT,GAExB,IAAII,EAAO,eAAiBL,EAAQC,GAEpC,OAAOK,KAAKC,QAAO,WACjB,OAA8B,IAAvBR,EAAEO,MAAME,KAAKH"}