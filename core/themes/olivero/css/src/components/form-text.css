/*
 * DO NOT EDIT THIS FILE.
 * See the following change record for more information,
 * https://www.drupal.org/node/3084859
 * @preserve
 */

/**
 * @file
 * Text input elements.
 */

/*
 * DO NOT EDIT THIS FILE.
 * See the following change record for more information,
 * https://www.drupal.org/node/3084859
 * @preserve
 */

/*
  Media query breakpoints.
  Processed by postcss/postcss-custom-media.
*/

@custom-media --sm (min-width: 500px);

@custom-media --md (min-width: 700px);

@custom-media --lg (min-width: 1000px);

@custom-media --xl (min-width: 1300px);

/* Navigation related breakpoints */

@custom-media --nav-md (min-width: 500px);

@custom-media --nav (min-width: 1200px);

/* Grid related breakpoints */

@custom-media --grid-md (min-width: 700px);

/* Grid shifts from 6 to 14 columns. */

@custom-media --grid-max (min-width: 1440px);

/* Width of the entire grid maxes out. */

/*
  Custom CSS properties.

  These are "compiled" by postcss/postcss-custom-properties for IE11 compatibility.
*/

:root {

  /* Typography */

  /* Layout */

  /* Drupal administrative toolbar heights and width. */

  /*
    Grid helpers.

    These variables help authors apply widths and negative margins to break items out of
    the grid, while still conforming to the larger grid system.

    Note we cannot change the values of these custom properties within media queries,
    as they are processed by postcss/postcss-custom-properties (for IE11 compatibility),
    which does not support that functionality. Therefore, we need a separate custom
    property for each breakpoint. ðŸ˜­
  */ /* Approximate width of a scrollbar. Doesn't have to be perfect. */

  /* Grid gap across various breakpoints. */

  /* Column counts at various breakpoints. */

  /* Count of grid-gaps at various breakpoints. */

  /* Width of the entire grid at various breakpoints. */

  /* Width of a grid column at various breakpoints */

  /* Layout helpers */ /* Black */ /* Black 2 */ /* Black 3 */ /* Gray Dark */ /* Gray medium */ /* Gray medium 1 */ /* Gray medium 2 */ /* Black 4 */ /* Gray light */ /* Gray light 1 */ /* Gray light 2 */ /* Blue dark */ /* Blue dark 2 */ /* Blue medium */ /* Blue bright */ /* Blue bright 5 */ /* White */ /* Red */ /* Gold */ /* Green */

  /* Shadows */

  /* Radius */

  /* Outlines */

  /* Header */

  /* Width of slide out navigation */

  /* Border radius */

  /* Form */
}

[type="color"],
[type="date"],
[type="datetime-local"],
[type="email"],
[type="file"],
[type="month"],
[type="number"],
[type="password"],
[type="search"],
[type="tel"],
[type="text"],
[type="time"],
[type="url"],
[type="week"],
textarea {
  max-width: 100%;
  min-height: var(--sp3);
  padding:
    calc((var(--sp3) - var(--font-size-base)*1.5 - var(--form-element-border-size-base)*2)/2)
    calc(var(--sp1) + var(--form-element-border-size-base))
    calc((var(--sp3) - var(--font-size-base)*1.5 - var(--form-element-border-size-base)*2)/2)
    calc(var(--sp1) + var(--form-element-border-size-left));
  color: var(--color--gray-10);
  border-width: var(--form-element-border-size-base) 0;
  border-style: solid;
  border-color: transparent;
  border-radius: 0 var(--border-radius-base) var(--border-radius-base) 0;
  outline: var(--outline--thin);
  background: linear-gradient(to right, var(--color--gray-30) var(--form-element-border-size-left), transparent var(--form-element-border-size-left), transparent 100%) var(--color--gray-95);
  font-family: inherit;
  font-size: var(--font-size-base);
  line-height: calc(var(--font-size-base)*1.5);
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;

  &:hover {
    border-color: var(--color--blue-70);
    background: linear-gradient(to right, var(--color--blue-70) var(--form-element-border-size-left), transparent var(--form-element-border-size-left), transparent 100%), linear-gradient(to left, var(--color--blue-70) var(--form-element-border-size-base), transparent var(--form-element-border-size-base), transparent 100%) var(--color--gray-95);
  }

  &:focus {
    border-color: var(--color--blue-70);
    outline: var(--outline--thick);
    background: linear-gradient(to right, var(--color--blue-70) var(--form-element-border-size-left), transparent var(--form-element-border-size-left), transparent 100%), linear-gradient(to left, var(--color--blue-70) var(--form-element-border-size-base), transparent var(--form-element-border-size-base), transparent 100%) var(--color--gray-95);
    box-shadow: var(--shadow-focusable);

    @supports (outline-style: double) {
      outline-style: double;
    }
  }

  &::-ms-clear {
    display: none;
  }

  &[disabled] {
    color: var(--color--gray-30);
    border-color: transparent;
    background: linear-gradient(to right, var(--color--gray-70) var(--form-element-border-size-left), transparent var(--form-element-border-size-left), transparent 100%) var(--color--gray-95);
  }

  &.error {
    border-color: var(--color--red);
    background: linear-gradient(to right, var(--color--red) var(--form-element-border-size-left), transparent var(--form-element-border-size-left), transparent 100%), linear-gradient(to left, var(--color--red) var(--form-element-border-size-base), transparent var(--form-element-border-size-base), transparent 100%) var(--color--gray-95);

    &:hover {
      border-color: var(--color--blue-70);
      background: linear-gradient(to right, var(--color--blue-70) var(--form-element-border-size-left), transparent var(--form-element-border-size-left), transparent 100%), linear-gradient(to left, var(--color--blue-70) var(--form-element-border-size-base), transparent var(--form-element-border-size-base), transparent 100%) var(--color--gray-95);
    }

    &:focus {
      border-color: var(--color--blue-70);
      background: linear-gradient(to right, var(--color--blue-70) var(--form-element-border-size-left), transparent var(--form-element-border-size-left), transparent 100%), linear-gradient(to left, var(--color--blue-70) var(--form-element-border-size-base), transparent var(--form-element-border-size-base), transparent 100%) var(--color--gray-95);
      box-shadow: var(--shadow-focusable);
    }
  }

  &.form-element--small {
    min-height: var(--sp2-5);
    padding: calc((var(--sp2-5) - var(--font-size-base)*1.5 - var(--form-element-border-size-base)*2)/2) calc(var(--sp0-75) + var(--form-element-border-size-base)) calc((var(--sp2-5) - var(--font-size-base)*1.5 - var(--form-element-border-size-base)*2)/2) calc(var(--sp0-75) + var(--form-element-border-size-left));
  }
}

[type="date"] {
  /* Ensure that date field isn't larger than other fields. */
  &::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
}
