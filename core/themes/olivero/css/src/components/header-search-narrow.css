/*
 * DO NOT EDIT THIS FILE.
 * See the following change record for more information,
 * https://www.drupal.org/node/3084859
 * @preserve
 */

/**
 * @file
 * Header Search Narrow Block.
 */

/*
 * DO NOT EDIT THIS FILE.
 * See the following change record for more information,
 * https://www.drupal.org/node/3084859
 * @preserve
 */

/*
  Media query breakpoints.
  Processed by postcss/postcss-custom-media.
*/

@custom-media --sm (min-width: 500px);

@custom-media --md (min-width: 700px);

@custom-media --lg (min-width: 1000px);

@custom-media --xl (min-width: 1300px);

/* Navigation related breakpoints */

@custom-media --nav-md (min-width: 500px);

@custom-media --nav (min-width: 1200px);

/* Grid related breakpoints */

@custom-media --grid-md (min-width: 700px);

/* Grid shifts from 6 to 14 columns. */

@custom-media --grid-max (min-width: 1440px);

/* Width of the entire grid maxes out. */

/*
  Custom CSS properties.

  These are "compiled" by postcss/postcss-custom-properties for IE11 compatibility.
*/

:root {

  /* Typography */

  /* Layout */

  /* Drupal administrative toolbar heights and width. */

  /*
    Grid helpers.

    These variables help authors apply widths and negative margins to break items out of
    the grid, while still conforming to the larger grid system.

    Note we cannot change the values of these custom properties within media queries,
    as they are processed by postcss/postcss-custom-properties (for IE11 compatibility),
    which does not support that functionality. Therefore, we need a separate custom
    property for each breakpoint. ðŸ˜­
  */ /* Approximate width of a scrollbar. Doesn't have to be perfect. */

  /* Grid gap across various breakpoints. */

  /* Column counts at various breakpoints. */

  /* Count of grid-gaps at various breakpoints. */

  /* Width of the entire grid at various breakpoints. */

  /* Width of a grid column at various breakpoints */

  /* Layout helpers */ /* Black */ /* Black 2 */ /* Black 3 */ /* Gray Dark */ /* Gray medium */ /* Gray medium 1 */ /* Gray medium 2 */ /* Black 4 */ /* Gray light */ /* Gray light 1 */ /* Gray light 2 */ /* Blue dark */ /* Blue dark 2 */ /* Blue medium */ /* Blue bright */ /* Blue bright 5 */ /* White */ /* Red */ /* Gold */ /* Green */

  /* Shadows */

  /* Radius */

  /* Outlines */

  /* Header */

  /* Width of slide out navigation */

  /* Border radius */

  /* Form */
}

.search-narrow__wrapper {
  margin-right: calc(-1*var(--sp));
  margin-bottom: var(--sp2);
  margin-left: calc(-1*var(--sp));
  background: black;

  form {
    display: flex;
  }

  .form-item {
    flex-grow: 1;
    margin: 0;
  }

  .form-actions {
    margin: 0;
  }

  input[type="search"] {
    width: calc(100% + var(--sp2));
    height: calc(3*var(--sp));
    padding: 0 var(--sp);
    transition: background-size 0.4s;
    color: white;
    border: solid 1px transparent;
    background-color: transparent;
    background-image: linear-gradient(var(--color--blue-50), var(--color--blue-50)); /* Two values are needed for IE11 support. */
    background-repeat: no-repeat;
    background-position: bottom left;
    background-size: 0% 5px;
    box-shadow: none;
    font-family: serif;
    font-size: 16px;
    -webkit-appearance: none;

    &::-ms-clear {
      width: 40px;
      opacity: 0.5;
    }

    &:focus {
      outline: 0;
      background-size: 100% 5px;

      /*
        We normally indicate focus by animating background-image width. This isn't
        available in IE11 when in Windows high contrast mode.
      */
      @media screen and (-ms-high-contrast: active) {
        border-bottom-width: 5px;
      }
    }

    @media (--md) {
      padding: var(--sp2);
    }
  }

  .search-form__submit {
    position: relative;
    overflow: hidden;
    align-self: stretch;
    width: var(--sp3);
    height: auto;
    margin: 0;
    padding: 0;
    cursor: pointer;
    border-color: transparent;
    background-color: transparent;

    /*
      When in Windows high contrast mode, FF will will not output either background
      images or SVGs that are nested directly within a <button> element, so we add a <span>.
    */
    .icon--search {
      position: absolute;
      top: 0;
      left: 0;
      display: block;
      width: 100%; /* Width of the SVG background image. */
      height: 100%;
      pointer-events: none;
      background-image: url("../../../images/search--white.svg");
      background-repeat: no-repeat;
      background-position: center;
      background-size: auto;

      &:after {
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 0;
        content: "";
        transition: transform 0.2s;
        transform: scaleX(0);
        transform-origin: left;
        border-top: solid 5px var(--color--blue-50);
      }
    }

    &:focus {
      outline: 0;
      box-shadow: none;

      span:after {
        transform: scaleX(1);
      }

      @media screen and (-ms-high-contrast: active) {
        border-bottom-width: var(--sp0-5);

        span:after {
          content: none;
        }
      }
    }

    @media (--md) {
      width: 80px;
    }

    @media screen and (-ms-high-contrast: active) {
      /* IE11's high contrast show will not show the background image, so we show the text. */
      .visually-hidden {
        position: static;
        overflow: visible;
        clip: auto;
        width: auto;
        height: auto;
        text-align: center;
      }

      /* Edge's high contrast does show the background image, so we hide it. */
      .icon--search {
        display: none;
      }
    }
  }

  /* 500px is the width of the primary nav at mobile. */
  @media (min-width: 500px) {
    margin-right: 0;
    margin-left: 0;
  }

  @media (--nav) {
    body:not(.is-always-mobile-nav) & {
      display: none;
    }
  }
}
